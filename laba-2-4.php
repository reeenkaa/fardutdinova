<b> Самостоятельная работа </b><br>
<b>Вариант 8</b>
<p> В массиве чисел A(N) нашла число, повторяющееся максимальное количество раз.</p>
<?php
    $N = rand(2,50);      // размерность матрицы
    $K = array(); // объявление переменной массива
    // Функция вывода на экран условия задачи
    function PrintTask()
    {
	global $N;
	echo "<p>Размерность матрицы: $N</p>";
    }
    // Функция вывода на экран матрицы
    function PrintMatrix()
    {
	global $N, $K;
	echo "<table border=1>\n";
	// цикл по строкам матрицы
	for ($i = 1; $i <= $N; $i++)
	{
	    echo "<td align=\"center\">" , $K[$i], "</td>";
	}
	echo "<tr>\n";
	echo "</table>\n";
    }
    // Функция заполнения матрицы случайными числами
    function FillMatrix()
    {
	global $N, $K;
	// цикл по строкам матрицы
	for ($i = 1; $i <= $N; $i++)
	{
	    // если номера строки и столбца не совпадают, то присвоить элементу массива случайное значение, иначе присвоить 0
	    $K[$i] = rand(0, 10);
	}
    }
    // Функция вычисления элементов диагонали
    function CalcMatrix()
    {
	global $N, $K;
	// цикл по размеру массива
	for ($x = 1; $x <= $N; $x++)
	{
	}
    }
    // выполнение программы
    PrintTask();
    FillMatrix();
    echo "Исходная матрица";
    PrintMatrix();
    $number_max = 0;  // переменная для хранения значения числа, которое повторяется наибольшее кол-во раз
    $count_max  = 0;  // переменная для хранения количества повторений числа $number

    // перебор всех элементов массива
    for ($i = 1; $i <= $N; $i++)
    {
	// Подсчёт повторений числа $K[$i] в массив
	$count = 0;
	for ($j = 1; $j <= $N; $j++)
	    if( $K[$i] == $K[$j] )
		$count++;
	// Определение, больше ли количество подсчитанных значений, чем до сих пор встречалось
	// если больше, то принять новое значение вместо старого, т.е. присвоить его переменной $count_max
	if( $count > $count_max )
	{
	    $count_max = $count;
	    $number_max = $K[$i];
	}
    }
    echo "Наибольшее количество повторений: $count_max<br>";
    echo "Для числа: $number_max";
?>
